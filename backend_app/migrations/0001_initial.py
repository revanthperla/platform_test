# Generated by Django 5.0.3 on 2024-03-14 04:32

import backend_app.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import s3direct.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidateName', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('currentEmployer', models.CharField(max_length=255)),
                ('totalExperience', models.CharField(max_length=255)),
                ('ctc', models.CharField(max_length=255)),
                ('ectc', models.CharField(max_length=255)),
                ('noticePeriod', models.CharField(max_length=255)),
                ('relocate', models.CharField(max_length=255)),
                ('comments', models.TextField()),
                ('remarks', models.TextField()),
                ('is_active', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('interview', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ClientRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entityName', models.CharField(max_length=255)),
                ('organizationStatus', models.CharField(max_length=255)),
                ('estYear', models.CharField(max_length=4)),
                ('proprieterName', models.CharField(max_length=255)),
                ('officeAddress', models.CharField(blank=True, max_length=255)),
                ('branchAddress', models.CharField(blank=True, max_length=255)),
                ('companyPerson', models.CharField(max_length=255)),
                ('companyDesignation', models.CharField(max_length=255)),
                ('companyNumber', models.CharField(default=0, max_length=255)),
                ('companyFax', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)])),
                ('companyEmail', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('industryNature', models.CharField(max_length=255)),
                ('companyCIN', models.CharField(max_length=255)),
                ('companyPAN', models.CharField(max_length=10)),
                ('companyGST', models.CharField(max_length=15)),
                ('bdpName', models.CharField(max_length=255)),
                ('bdpmName', models.CharField(max_length=255)),
                ('accountManager', models.CharField(max_length=255)),
                ('billingCity', models.CharField(max_length=255)),
                ('billingCountry', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Recruiter', 'Recruiter'), ('Manager', 'Manager'), ('Business Development Partner', 'Business Development Partner'), ('Business Development Partner Manager', 'Business Development Partner Manager'), ('Account Manager', 'Account Manager')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('description', models.TextField()),
                ('done', models.BooleanField(default=False)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.assessment')),
            ],
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titleDesignation', models.CharField(max_length=255, null=True)),
                ('clientName', models.CharField(max_length=255, null=True)),
                ('startDate', models.DateField(null=True)),
                ('closureDate', models.DateField(null=True)),
                ('jobType', models.CharField(max_length=255, null=True)),
                ('jobStatus', models.CharField(max_length=255, null=True)),
                ('workExperience', models.CharField(max_length=255, null=True)),
                ('industryNature', models.CharField(max_length=255, null=True)),
                ('compensation', models.CharField(max_length=255, null=True)),
                ('location', models.CharField(max_length=255, null=True)),
                ('eligibilityCriteria', models.TextField(null=True)),
                ('primaryResponsibilities', models.TextField(null=True)),
                ('mandatorySkills', models.TextField(null=True)),
                ('desirableSkills', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=False, null=True)),
                ('done', models.BooleanField(default=False, null=True)),
                ('resume', s3direct.fields.S3DirectField(blank=True, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend_app.clientregistration')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='job_description',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend_app.jobdescription'),
        ),
        migrations.CreateModel(
            name='PendingClientRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('client_registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend_app.clientregistration')),
            ],
        ),
        migrations.CreateModel(
            name='RejectionReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.pendingclientregistration')),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('aadhaarNumber', models.CharField(blank=True, max_length=12, null=True)),
                ('dateOfBirth', models.DateField(blank=True, null=True)),
                ('maritalStatus', models.CharField(blank=True, max_length=20, null=True)),
                ('emergencyContact', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phoneNumber', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)])),
                ('emailID', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()])),
                ('emergencyContactNumber', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)])),
                ('jobTitle', models.CharField(blank=True, max_length=100, null=True)),
                ('departmentName', models.CharField(blank=True, max_length=100, null=True)),
                ('joiningDate', models.DateField(blank=True, null=True)),
                ('employmentType', models.CharField(blank=True, max_length=100, null=True)),
                ('prevCompany', models.CharField(blank=True, max_length=255, null=True)),
                ('prevDesignation', models.CharField(blank=True, max_length=100, null=True)),
                ('relevantSkills', models.TextField(blank=True, null=True)),
                ('documentAcknowledged', models.BooleanField(default=False, null=True)),
                ('pfUAN', models.CharField(blank=True, max_length=100, null=True)),
                ('esiNO', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend_app.role')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client_registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend_app.clientregistration')),
                ('rejection_reason', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend_app.rejectionreason')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='LoginDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('user_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='backend_app.userdata')),
            ],
        ),
        migrations.AddField(
            model_name='jobdescription',
            name='accountManager',
            field=models.ForeignKey(limit_choices_to={'role__role': 'Account Manager'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_descriptions_as_account_manager', to='backend_app.userdata'),
        ),
        migrations.AddField(
            model_name='jobdescription',
            name='added_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_job_descriptions', to='backend_app.userdata'),
        ),
        migrations.AddField(
            model_name='jobdescription',
            name='assignedRecruiters',
            field=models.ForeignKey(limit_choices_to={'role__role': 'Recruiter'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_job_descriptions', to='backend_app.userdata'),
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=255)),
                ('graduationYear', models.IntegerField(validators=[django.core.validators.MinValueValidator(1960), backend_app.models.current_year_validator])),
                ('grade', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='backend_app.userdata')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experience', to='backend_app.userdata')),
            ],
        ),
    ]
